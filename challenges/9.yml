---
name: SCP Allow Only Specific Services
description: |
  The engineers at the company became quite enthusiastic and began experimenting with a wide array of services offered by AWS. However, senior management experienced a moment of hesitation and grew somewhat anxious upon reviewing the projected costs associated with these AWS services. Consequently, they are now keen to ensure that the company does not overspend this quarter. To address this concern, they have decided to centrally limit access to these services, regardless of the IAM permissions granted to employees.

  You have been assigned the responsibility of permitting only the following services through AWS Service Control Policies (SCP):

    - Amazon S3
    - AWS Lambda
    - Amazon CloudFront
    - Amazon CloudWatch
    - Amazon EC2
    - Amazon STS
    - Amazon IAM

  However, there is still a need to exempt a single role in case there is an urgent requirement to implement changes or deployments for other services. The following role should be exempt from the restrictions:
    - **arn:aws:iam::*:role/cloudAdmin**

policyType: SERVICE_CONTROL_POLICY
initialPolicy:
  {
    "Version": "2012-10-17",
    "Statement":
      [
        {
          "Sid": "AWSFullAccess",
          "Effect": "Allow",
          "Action": "*",
          "Resource": "*",
        },
      ],
  }
hints:
  - Take a look at an exciting documentation of the [AWS Service Control Policies](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_scps.html)!
  - This [examples repository](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_scps_examples.html) might provide new ideas on how to approach the problem!

solution: |
  Congratulations! ðŸ’¯ The financial crisis has been averted, and it's all thanks to you!
  Your created SCP should look similar to the below:

  ```json
  {
    "Version": "2012-10-17",
    "Statement": [
      {
        "Sid": "AWSFullAccess",
        "Effect": "Allow",
        "Action": "*",
        "Resource": "*"
      },
      {
        "Condition": {
          "ArnNotLike": {
            "aws:PrincipalArn": [
              "arn:aws:iam::*:role/cloudAdmin"
            ]
          }
        },
        "Effect": "Deny",
        "NotAction": [
          "s3:*",
          "lambda:*",
          "cloudfront:*",
          "cloudwatch:*",
          "ec2:*",
          "sts:*",
          "iam:*"
        ],
        "Resource": "*",
        "Sid": "DenyAllExceptDefined"
      }
    ]
  }
  ```

testCases:
  - context:
      action: ${s3Actions}
      resource: arn:aws:s3:::amzn-s3-demo-bucket
      aws:PrincipalArn: arn:aws:iam::123456789012:user/brian
    allow: true

  - context:
      action: ${lambdaActions}
      resource: arn:aws:lambda:us-east-1:123456789012:function:*
      aws:PrincipalArn: arn:aws:iam::123456789012:user/alice
    allow: true

  - context:
      action: ${cloudfrontActions}
      resource: arn:aws:cloudfront::123456789012:*
      aws:PrincipalArn: arn:aws:iam::123456789012:user/john
    allow: true

  - context:
      action: ${cloudwatchActions}
      resource: arn:aws:cloudwatch:us-east-1:123456789012:*
      aws:PrincipalArn: arn:aws:iam::123456789012:role/monitoring
    allow: true

  - context:
      action: ${ec2Actions}
      resource: arn:aws:ec2:us-east-1:123456789012:*
      aws:PrincipalArn: arn:aws:iam::123456789012:user/brian
    allow: true

  - context:
      action: ${stsActions}
      resource: arn:aws:sts::123456789012:*
      aws:PrincipalArn: arn:aws:iam::123456789012:user/adrian
    allow: true

  - context:
      action: ${iamActions}
      resource: arn:aws:iam::123456789012:*
      aws:PrincipalArn: arn:aws:iam::123456789012:user/paul
    allow: true

  - context:
      action: ${deniedActions}
      resource: arn:aws:${deniedServices}:us-east-1:123456789012:*
      aws:PrincipalArn: arn:aws:iam::123456789012:user/robert
    allow: false

  - context:
      action: ${deniedActions}
      resource: arn:aws:${deniedServices}:us-east-1:123456789012:*
      aws:PrincipalArn: arn:aws:iam::123456789012:role/cloudAdmin
    allow: true

  - context:
      action: ${cloudwatchActions}
      resource: arn:aws:cloudwatch:us-east-1:123456789012:*
      aws:PrincipalArn: arn:aws:iam::123456789012:role/cloudAdmin
    allow: true

  - context:
      action: ${s3Actions}
      resource: arn:aws:s3:::amzn-s3-demo-bucket
      aws:PrincipalArn: arn:aws:iam::123456789012:user/cloudAdmin
    allow: true

  - context:
      action: ${lambdaActions}
      resource: arn:aws:lambda:us-east-1:123456789012:function:*
      aws:PrincipalArn: arn:aws:iam::123456789012:user/cloudAdmin
    allow: true

values:
  s3Actions:
    - s3:CreateAccessPoint
    - s3:CreateBucket
    - s3:CreateJob
    - s3:DeleteBucket
    - s3:DeleteBucketPolicy
    - s3:DeleteBucketWebsite
    - s3:DeleteJobTagging
    - s3:DeleteMultiRegionAccessPoint
    - s3:DeleteObject
    - s3:DeleteObjectTagging
    - s3:DeleteObjectVersion
    - s3:DescribeJob
    - s3:GetAccelerateConfiguration
    - s3:GetAccessGrant
    - s3:GetBucketPolicy
    - s3:GetObject
    - s3:GetObjectAcl
    - s3:GetObjectAttributes
    - s3:GetObjectRetention
    - s3:GetObjectTagging
    - s3:GetObjectVersion
    - s3:ListAccessPoints
    - s3:ListAllMyBuckets
    - s3:ListBucket
    - s3:ListBucketMultipartUploads
    - s3:ListBucketVersions
    - s3:PutBucketAcl
    - s3:PutBucketCORS
    - s3:PutBucketLogging
    - s3:PutBucketPolicy
    - s3:PutBucketTagging
    - s3:PutBucketVersioning
    - s3:PutBucketWebsite
    - s3:PutObject
    - s3:PutObjectAcl
    - s3:PutObjectLegalHold
    - s3:PutObjectRetention
    - s3:PutObjectTagging
    - s3:ReplicateDelete
    - s3:ReplicateObject
    - s3:TagResource
    - s3:UntagResource
    - s3:UpdateJobPriority
    - s3:UpdateJobStatus

  lambdaActions:
    - lambda:AddPermission
    - lambda:CreateAlias
    - lambda:CreateFunction
    - lambda:CreateFunctionUrlConfig
    - lambda:DeleteAlias
    - lambda:DeleteFunction
    - lambda:DeleteLayerVersion
    - lambda:DisableReplication
    - lambda:EnableReplication
    - lambda:GetAccountSettings
    - lambda:GetAlias
    - lambda:GetFunction
    - lambda:GetFunctionConcurrency
    - lambda:GetLayerVersion
    - lambda:GetLayerVersionPolicy
    - lambda:GetPolicy
    - lambda:InvokeAsync
    - lambda:InvokeFunction
    - lambda:InvokeFunctionUrl
    - lambda:ListAliases
    - lambda:ListFunctions
    - lambda:ListLayerVersions
    - lambda:ListLayers
    - lambda:ListTags
    - lambda:ListVersionsByFunction
    - lambda:PublishLayerVersion
    - lambda:PublishVersion
    - lambda:PutFunctionConcurrency
    - lambda:PutRuntimeManagementConfig
    - lambda:RemovePermission
    - lambda:TagResource
    - lambda:UntagResource
    - lambda:UpdateAlias
    - lambda:UpdateFunctionCode
    - lambda:UpdateFunctionConfiguration
    - lambda:UpdateFunctionUrlConfig

  cloudfrontActions:
    - cloudfront:CopyDistribution
    - cloudfront:CreateDistribution
    - cloudfront:CreateFunction
    - cloudfront:CreateKeyGroup
    - cloudfront:CreateKeyValueStore
    - cloudfront:CreateVpcOrigin
    - cloudfront:DeleteCachePolicy
    - cloudfront:DeleteDistribution
    - cloudfront:DeletePublicKey
    - cloudfront:DeleteVpcOrigin
    - cloudfront:DescribeFunction
    - cloudfront:GetAnycastIpList
    - cloudfront:GetDistribution
    - cloudfront:GetFunction
    - cloudfront:GetInvalidation
    - cloudfront:GetKeyGroup
    - cloudfront:GetKeyGroupConfig
    - cloudfront:GetPublicKey
    - cloudfront:GetPublicKeyConfig
    - cloudfront:GetSavingsPlan
    - cloudfront:GetVpcOrigin
    - cloudfront:ListFunctions
    - cloudfront:ListKeyGroups
    - cloudfront:ListKeyValueStores
    - cloudfront:ListPublicKeys
    - cloudfront:ListRealtimeLogConfigs
    - cloudfront:ListSavingsPlans
    - cloudfront:ListTagsForResource
    - cloudfront:ListUsages
    - cloudfront:ListVpcOrigins
    - cloudfront:PublishFunction
    - cloudfront:TagResource
    - cloudfront:TestFunction
    - cloudfront:UntagResource
    - cloudfront:UpdateCachePolicy
    - cloudfront:UpdateDistribution
    - cloudfront:UpdateFunction
    - cloudfront:UpdateKeyGroup
    - cloudfront:UpdatePublicKey

  cloudwatchActions:
    - cloudwatch:BatchGetServiceLevelIndicatorReport
    - cloudwatch:BatchGetServiceLevelObjectiveBudgetReport
    - cloudwatch:CreateServiceLevelObjective
    - cloudwatch:DeleteAlarms
    - cloudwatch:DeleteAnomalyDetector
    - cloudwatch:DescribeAlarmHistory
    - cloudwatch:DescribeAlarms
    - cloudwatch:DescribeAlarmsForMetric
    - cloudwatch:DisableInsightRules
    - cloudwatch:EnableAlarmActions
    - cloudwatch:EnableInsightRules
    - cloudwatch:GenerateQuery
    - cloudwatch:GetDashboard
    - cloudwatch:GetInsightRuleReport
    - cloudwatch:GetMetricData
    - cloudwatch:GetMetricStatistics
    - cloudwatch:GetMetricStream
    - cloudwatch:GetService
    - cloudwatch:GetServiceData
    - cloudwatch:Link
    - cloudwatch:ListDashboards
    - cloudwatch:ListMetrics
    - cloudwatch:ListServices
    - cloudwatch:ListTagsForResource
    - cloudwatch:PutAnomalyDetector
    - cloudwatch:PutCompositeAlarm
    - cloudwatch:PutDashboard
    - cloudwatch:PutInsightRule
    - cloudwatch:PutMetricAlarm
    - cloudwatch:PutMetricData
    - cloudwatch:PutMetricStream
    - cloudwatch:SetAlarmState
    - cloudwatch:StartMetricStreams
    - cloudwatch:StopMetricStreams
    - cloudwatch:TagResource
    - cloudwatch:UntagResource

  ec2Actions:
    - ec2:CreateFleet
    - ec2:CreateFlowLogs
    - ec2:CreateFpgaImage
    - ec2:CreateImage
    - ec2:CreateInstanceConnectEndpoint
    - ec2:CreateInstanceEventWindow
    - ec2:CreateInstanceExportTask
    - ec2:CreateInternetGateway
    - ec2:CreateIpam
    - ec2:CreateIpamPool
    - ec2:CreateIpamResourceDiscovery
    - ec2:CreateIpamScope
    - ec2:CreateKeyPair
    - ec2:CreateManagedPrefixList
    - ec2:CreateNatGateway
    - ec2:CreateNetworkAcl
    - ec2:CreateRoute
    - ec2:CreateRouteTable
    - ec2:CreateSecurityGroup
    - ec2:CreateSnapshot
    - ec2:CreateSnapshots
    - ec2:CreateSpotDatafeedSubscription
    - ec2:CreateStoreImageTask
    - ec2:CreateSubnet
    - ec2:CreateSubnetCidrReservation
    - ec2:CreateTags
    - ec2:CreateTransitGateway
    - ec2:CreateTransitGatewayConnect
    - ec2:CreateTransitGatewayConnectPeer

  stsActions:
    - sts:AssumeRole
    - sts:AssumeRoleWithSAML
    - sts:AssumeRoleWithWebIdentity
    - sts:AssumeRoot
    - sts:DecodeAuthorizationMessage
    - sts:GetAccessKeyInfo
    - sts:GetCallerIdentity
    - sts:GetFederationToken
    - sts:GetServiceBearerToken
    - sts:GetSessionToken
    - sts:SetContext
    - sts:SetSourceIdentity
    - sts:TagSession

  iamActions:
    - iam:AddUserToGroup
    - iam:AttachGroupPolicy
    - iam:AttachRolePolicy
    - iam:AttachUserPolicy
    - iam:ChangePassword
    - iam:CreateAccessKey
    - iam:CreateAccountAlias
    - iam:CreateGroup
    - iam:CreateInstanceProfile
    - iam:CreateLoginProfile
    - iam:CreatePolicy
    - iam:CreatePolicyVersion
    - iam:CreateRole
    - iam:CreateSAMLProvider
    - iam:CreateServiceLinkedRole
    - iam:CreateUser
    - iam:CreateVirtualMFADevice
    - iam:DeactivateMFADevice
    - iam:DeleteAccessKey
    - iam:DeleteAccountAlias
    - iam:DeleteAccountPasswordPolicy
    - iam:DeleteGroup
    - iam:DeleteGroupPolicy
    - iam:DeleteInstanceProfile
    - iam:DeleteLoginProfile
    - iam:DeleteOpenIDConnectProvider
    - iam:DeletePolicy
    - iam:DeletePolicyVersion
    - iam:DeleteRole
    - iam:DeleteRolePolicy
    - iam:DeleteSAMLProvider
    - iam:DeleteSSHPublicKey
    - iam:DeleteServerCertificate
    - iam:DeleteServiceLinkedRole
    - iam:DeleteServiceSpecificCredential
    - iam:DeleteSigningCertificate
    - iam:DeleteUser
    - iam:DeleteUserPermissionsBoundary
    - iam:DeleteUserPolicy
    - iam:DeleteVirtualMFADevice
    - iam:DetachGroupPolicy
    - iam:DetachRolePolicy
    - iam:DetachUserPolicy
    - iam:EnableMFADevice
    - iam:EnableOrganizationsRootSessions
    - iam:GenerateCredentialReport
    - iam:GetAccountEmailAddress
    - iam:GetAccountName
    - iam:GetAccountPasswordPolicy
    - iam:GetAccountSummary
    - iam:GetCloudFrontPublicKey
    - iam:GetCredentialReport
    - iam:GetGroup
    - iam:GetGroupPolicy
    - iam:GetInstanceProfile
    - iam:GetLoginProfile
    - iam:GetMFADevice
    - iam:GetOpenIDConnectProvider
    - iam:GetPolicy

  deniedActions:
    - aps:ListAlertManagerSilences
    - appconfig:GetLatestConfiguration
    - ce:GetCostCategories
    - mediatailor:ListPlaybackConfigurations
    - lex:PutBot
    - osis:ListPipelines
    - vpc-lattice:ListResourceConfigurations
    - lightsail:GetDomains
    - cognito-idp:UpdateUserPoolClient
    - datazone:CreateGlossaryTerm
    - dms:DeleteEndpoint
    - forecast:DeleteDatasetGroup
    - codeconnections:GetSyncBlockerSummary
    - amplify:ListArtifacts
    - a4b:GetContact
    - fsx:CreateVolumeFromBackup
    - backup-gateway:ListGateways
    - storagegateway:CreateTapes
    - redshift-serverless:GetTableRestoreStatus
    - storagegateway:UpdateAutomaticTapeCreationPolicy
    - omics:DeleteAnnotationStore
    - lightsail:DeleteBucketAccessKey
    - glue:GetCatalog
    - chime:CreateMediaStreamPipeline
    - glacier:GetJobOutput
    - bedrock:ListImportedModels
    - elasticache:DescribeGlobalReplicationGroups
    - databrew:DescribeRuleset
    - eks:AccessKubernetesApi
    - cloudformation:EstimateTemplateCost
    - athena:ListTagsForResource
    - opsworks:CreateDeployment
    - verified-access:AllowVerifiedAccess
    - iotwireless:GetServiceProfile
    - license-manager-user-subscriptions:DeleteLicenseServerEndpoint
    - elasticache:DecreaseNodeGroupsInGlobalReplicationGroup
    - proton:ListEnvironmentTemplateVersions
    - codecommit:UpdateDefaultBranch
    - sqlworkbench:UpdateAccountConnectionSettings
    - iot:CreateScheduledAudit
    - kendra:UpdateFeaturedResultsSet
    - vendor-insights:ListDataSources
    - workdocs:DeleteDocumentVersion
    - globalaccelerator:ListAccelerators
    - wickr:ListTagsForResource
    - forecast:DescribeDataset
    - elasticache:DescribeUsers
    - quicksight:DeleteIAMPolicyAssignment
    - rds:ModifyDBShardGroup
    - quicksight:CancelIngestion
    - backup:UpdateRegionSettings
    - batch:DeleteSchedulingPolicy
    - panorama:UpdateDeviceMetadata
    - iot-device-tester:CheckVersion
    - guardduty:AcceptAdministratorInvitation
    - globalaccelerator:DeprovisionByoipCidr
    - bedrock:DeleteAgentActionGroup
    - guardduty:GetFindings
    - sqs:CancelMessageMoveTask
    - dataexchange:GetJob
    - workspaces-web:UpdateTrustStore
    - cloudsearch:DeleteIndexField
    - sns:GetEndpointAttributes
    - sqlworkbench:UpdateFolder
    - ecr:DescribeRepositoryCreationTemplates
    - proton:DeleteServiceSyncConfig
    - omics:ListRunCaches
    - voiceid:DescribeFraudsterRegistrationJob
    - aws-marketplace:Subscribe
    - quicksight:SearchUsers
    - config:DescribeConfigurationAggregatorSourcesStatus
    - events:DisableRule
    - shield:ListTagsForResource
    - datazone:DeleteSubscriptionGrant
    - connect-campaigns:UpdateCampaignOutboundCallConfig
    - chime:ListAppInstanceBots
    - app-integrations:ListDataIntegrationAssociations
    - lightsail:GetDisks
    - docdb-elastic:GetPendingMaintenanceAction
    - aps:DescribeAlertManagerDefinition
    - notifications:RegisterNotificationHub
    - frauddetector:UpdateList
    - glue:SendFeedback
    - backup-gateway:UntagResource
    - rekognition:GetCelebrityInfo
    - cognito-identity:UnlinkIdentity
    - rolesanywhere:DisableTrustAnchor
    - iot:DescribeDimension
    - sagemaker:CreateStudioLifecycleConfig
    - quicksight:DeleteDataSource
    - datasync:DescribeLocationAzureBlob
    - redshift:CancelQuerySession
    - quicksight:DescribeUser
    - elastic-inference:UntagResource
    - m2:UpdateEnvironment
    - secretsmanager:ListSecrets

  deniedServices:
    - aps
    - appconfig
    - ce
    - mediatailor
    - lex
    - osis
    - vpc-lattice
    - lightsail
    - cognito-idp
    - datazone
    - dms
    - forecast
    - codeconnections
    - amplify
    - a4b
    - fsx
    - backup-gateway
    - storagegateway
    - redshift-serverless
    - storagegateway
    - omics
    - lightsail
    - glue
    - chime
    - glacier
    - bedrock
    - elasticache
    - databrew
    - eks
    - cloudformation
    - athena
    - opsworks
    - verified-access
    - iotwireless
    - license-manager-user-subscriptions
    - elasticache
    - proton
    - codecommit
    - sqlworkbench
    - iot
    - kendra
    - vendor-insights
    - workdocs
    - globalaccelerator
    - wickr
    - forecast
    - elasticache
    - quicksight
    - rds
    - quicksight
    - backup
    - batch
    - panorama
    - iot-device-tester
    - guardduty
    - globalaccelerator
    - bedrock
    - guardduty
    - sqs
    - dataexchange
    - workspaces-web
    - cloudsearch
    - sns
    - sqlworkbench
    - ecr
    - proton
    - omics
    - voiceid
    - aws-marketplace
    - quicksight
    - config
    - events
    - shield
    - datazone
    - connect-campaigns
    - chime
    - app-integrations
    - lightsail
    - docdb-elastic
    - aps
    - notifications
    - frauddetector
    - glue
    - backup-gateway
    - rekognition
    - cognito-identity
    - rolesanywhere
    - iot
    - sagemaker
    - quicksight
    - datasync
    - redshift
    - quicksight
    - elastic-inference
    - m2
    - secretsmanager
