---
name: Restricting EC2 Instance Launches to Small Sizes
description: |
  Some of your colleagues have begun exploring the AWS EC2 service. However, the accounting department has expressed some concerns regarding the potential costs associated with this service. As a result, they have requested your assistance in minimizing expenses during the initial stages of adopting this service. To address this, you have decided to restrict the EC2 instance sizes (types) to the smallest options that users are permitted to launch. The final step is to create an IAM identity policy to implement this restriction. The following EC2 instance sizes should be allowed:

  - **nano**
  - **micro**
  - **small**

  It didn't take long for you to discover that launching EC2 instances through the web console initiates several additional actions. However, there is no need to limit specific EC2 actions as long as the size restriction is met.

policyType: IDENTITY_POLICY
initialPolicy:
  {
    "Version": "2012-10-17",
    "Statement": [{ "Effect": "Allow", "Action": "ec2:*", "Resource": "*" }],
  }
hints:
  - Take a moment to analyze the context values associated with the same action. You may discover some intriguing insights along the way!
  - There may be instances when AWS IAM condition context keys are missing from certain requests. Is there a way to address this limitation?
  - Another option would be to isolate the action and the resource combination that utilizes the `ec2:InstanceType` context key.
solution: |
  Fantastic job! Thanks to you, the accounting team no longer has to worry! 

  There are multiple ways to achieve this; however,
  your approach might resemble something similar to the example below:

  ```json
  {
    "Version": "2012-10-17",
    "Statement": [
      {
        "Sid": "LimitInstanceTypes",
        "Effect": "Allow",
        "Action": "ec2:*",
        "Resource": "*",
        "Condition": {
          "StringLikeIfExists": {
            "ec2:InstanceType": [
              "*.nano",
              "*.micro",
              "*.small"
            ]
          }
        }
      }
    ]
  }
  ```

  Alternatively, you could have opted to use the denial statement:

  ```json
  {
    "Version": "2012-10-17",
    "Statement": [
      {
        "Sid": "FullEC2Access",
        "Effect": "Allow",
        "Action": "ec2:*",
        "Resource": "*"
      },
      {
        "Sid": "PreventLargerInstances",
        "Effect": "Deny",
        "Action": "ec2:RunInstances",
        "Resource": "arn:aws:ec2:*:*:instance/*",
        "Condition": {
          "StringNotLike": {
            "ec2:InstanceType": [
              "*.nano",
              "*.micro",
              "*.small"
            ]
          }
        }
      }
    ]
  }
  ```

  Alright, itâ€™s time to move on to the next challenge!

testCases:
  - context:
      action: "ec2:RunInstances"
      resource: "arn:aws:ec2:us-east-1:123456789012:instance/*"
      "ec2:InstanceMarketType": on-demand
      "aws:Resource": instance/*
      "aws:Account": "123456789012"
      "ec2:AvailabilityZone": us-east-1a
      "ec2:InstanceType": "${allowedInstanceTypes}"
      "ec2:RootDeviceType": ebs
      "aws:Region": us-east-1
      "aws:Service": ec2
      "ec2:InstanceID": "*"
      "aws:ARN": "arn:aws:ec2:us-east-1:123456789012:instance/*"
    allow: true

  - context:
      action: "ec2:RunInstances"
      resource: "arn:aws:ec2:us-east-1:123456789012:instance/*"
      "ec2:InstanceMarketType": on-demand
      "aws:Resource": instance/*
      "aws:Account": "123456789012"
      "ec2:AvailabilityZone": us-east-1a
      "ec2:InstanceType": "${forbiddenInstanceTypes}"
      "ec2:RootDeviceType": ebs
      "aws:Region": us-east-1
      "aws:Service": ec2
      "ec2:InstanceID": "*"
      "aws:ARN": "arn:aws:ec2:us-east-1:123456789012:instance/*"
    allow: false

  - context:
      action: "ec2:RunInstances"
      resource: "arn:aws:ec2:us-east-1:123456789012:network-interface/*"
      "ec2:Vpc": "arn:aws:ec2:us-east-1:123456789012:vpc/vpc-8cc269f1"
      "ec2:NetworkInterfaceID": "*"
      "aws:Resource": "network-interface/*"
      "aws:Account": "123456789012"
      "ec2:AvailabilityZone": "us-east-1a"
      "aws:Region": "us-east-1"
      "aws:Service": "ec2"
      "ec2:AssociatePublicIpAddress": "true"
      "ec2:Subnet": "arn:aws:ec2:us-east-1:123456789012:subnet/subnet-7bb32c1d"
      "aws:Type": "network-interface"
      "ec2:Region": "us-east-1"
      "aws:ARN": "arn:aws:ec2:us-east-1:123456789012:network-interface/*"
    allow: true

  - context:
      action: "ec2:RunInstances"
      resource: "arn:aws:ec2:us-east-1:123456789012:security-group/sg-6616496b"
      "aws:Region": "us-east-1"
      "aws:Service": "ec2"
      "ec2:Vpc": "arn:aws:ec2:us-east-1:123456789012:vpc/vpc-8cc269f1"
      "aws:Resource": "security-group/sg-6616496b"
      "aws:Type": "security-group"
      "aws:Account": "123456789012"
      "ec2:Region": "us-east-1"
      "aws:ARN": "arn:aws:ec2:us-east-1:123456789012:security-group/sg-6616496b"
      "ec2:SecurityGroupID": "sg-6616496b"
    allow: true

  - context:
      action: "ec2:RunInstances"
      resource: "arn:aws:ec2:us-east-1:123456789012:subnet/subnet-1642da49"
      "ec2:AvailabilityZoneId": use1-az6
      "ec2:Vpc": "arn:aws:ec2:us-east-1:123456789012:vpc/vpc-8cc269f1"
      "aws:Resource": "subnet/subnet-1642da49"
      "aws:Account": "123456789012"
      "ec2:AvailabilityZone": "us-east-1d"
      "ec2:SubnetID": "subnet-1642da49"
      "aws:Region": "us-east-1"
      "aws:Service": "ec2"
      "aws:Type": "subnet"
      "ec2:Region": "us-east-1"
      "aws:ARN": "arn:aws:ec2:us-east-1:123456789012:subnet/subnet-1642da49"
    allow: true

  - context:
      action: "ec2:RunInstances"
      resource: "arn:aws:ec2:us-east-1:123456789012:volume/*"
      "aws:Account": "123456789012"
      "aws:Region": "us-east-1"
      "aws:Service": "ec2"
      "aws:Type": "volume"
      "ec2:Region": "us-east-1"
      "aws:Resource": "volume/*"
      "aws:ARN": "arn:aws:ec2:us-east-1:123456789012:volume/*"
      "ec2:VolumeThroughput": "125"
      "ec2:AvailabilityZone": "us-east-1a"
      "ec2:Encrypted": "false"
      "ec2:VolumeType": "gp3"
      "ec2:VolumeID": "*"
      "ec2:VolumeSize": "8"
    allow: true

  - context:
      action: "ec2:CreateKeyPair"
      resource: "arn:aws:ec2:us-east-1:123456789012:key-pair/mgmt-ssh-key"
      "aws:Account": "123456789012"
      "aws:Region": "us-east-1"
      "aws:Service": "ec2"
      "aws:Type": "key-pair"
      "ec2:Region": "us-east-1"
      "aws:Resource": "key-pair/mgmt-ssh-key"
      "aws:ARN": "arn:aws:ec2:us-east-1:123456789012:key-pair/mgmt-ssh-key"
      "ec2:KeyPairType": "ed25519"
      "ec2:KeyPairName": "mgmt-ssh-key"
    allow: true

  - context:
      action: "ec2:CreateTags"
      resource: "arn:aws:ec2:us-east-1:123456789012:key-pair/Management"
      "aws:Account": "123456789012"
      "aws:Region": "us-east-1"
      "aws:Service": "ec2"
      "aws:Type": "key-pair"
      "ec2:Region": "us-east-1"
      "aws:Resource": "key-pair/Management"
      "aws:ARN": "arn:aws:ec2:us-east-1:123456789012:key-pair/Management"
      "aws:ResourceTag/department": "development"
      "ec2:KeyPairName": "Management"
      "ec2:KeyPairType": "ed25519"
      "ec2:KeyPairID": "key-095cf2c239a7dd0d0"
      "ec2:ResourceTag/department": "development"
    allow: true

  - context:
      action: "${genericAllowedActions}"
      resource: "arn:aws:ec2:us-east-1:123456789012:*"
      "aws:Account": "123456789012"
      "aws:Region": "us-east-1"
      "aws:Service": "ec2"
      "ec2:Region": "us-east-1"
    allow: true

  - context:
      action: ${otherForbiddenActions}
      resource: arn:aws:${otherForbiddenServices}:us-east-1:123456789012:*
    allow: false

values:
  genericAllowedActions:
    - ec2:DescribeInstances
    - ec2:DescribeAvailabilityZones
    - ec2:DescribeInstanceTypes
    - ec2:DescribeInstanceTypeOfferings
    - ec2:DescribeAccountAttributes
    - ec2:DescribeSubnets
    - ec2:DescribeSecurityGroups
    - ec2:DescribeVpcs
    - ec2:GetEbsEncryptionByDefault
    - ec2:GetEbsDefaultKmsKeyId
    - ec2:DescribeImages
    - ec2:GetInstanceMetadataDefaults

  allowedInstanceTypes:
    - t2.nano
    - t2.micro
    - t2.small
    - t3.nano
    - t3.micro
    - t3.small
    - t3a.nano
    - t3a.micro
    - t3a.small
    - t4g.nano
    - t4g.micro
    - t4g.small

  forbiddenInstanceTypes:
    - t2.medium
    - t2.large
    - t2.xlarge
    - t2.2xlarge
    - t3.medium
    - t3.large
    - t3.xlarge
    - t3.2xlarge
    - m4.large
    - m4.xlarge
    - m4.4xlarge
    - m4.10xlarge
    - m4.16xlarge
    - m6g.large
    - m6g.2xlarge
    - m6g.metal
    - m6gd.2xlarge
    - m8g.medium
    - m8g.xlarge
    - m8g.4xlarge
    - m8g.8xlarge
    - m8g.16xlarge

  otherForbiddenActions:
    - panorama:ListTagsForResource
    - glue:CreateWorkflow
    - codestar:UpdateProject
    - nimble:DeleteStudioComponent
    - storagegateway:SetSMBGuestPassword
    - applicationinsights:DescribeLogPattern
    - glue:StartMLEvaluationTaskRun
    - kendra-ranking:UpdateRescoreExecutionPlan
    - connect:CreateIntegrationAssociation
    - resiliencehub:CreateAppVersionAppComponent
    - ds-data:SearchGroups
    - deadline:ListBudgets
    - panorama:DescribePackage
    - rolesanywhere:GetCrl
    - notifications:DeleteEventRule
    - guardduty:GetFindings
    - databrew:StartJobRun
    - sdb:PutAttributes
    - grafana:ListWorkspaceServiceAccounts
    - s3:DeleteAccessGrant
    - logs:PutDataProtectionPolicy
    - sms:DeleteServerCatalog
    - medialive:DeleteEventBridgeRuleTemplateGroup
    - dms:ListMetadataModelConversions
    - chime:ListMediaPipelines
    - omics:CreateWorkflow
    - datazone:RejectSubscriptionRequest
    - refactor-spaces:CreateEnvironment
    - transcribe:DeleteVocabulary
    - auditmanager:ListNotifications
    - rds:ResetDBParameterGroup
    - auditmanager:GetEvidenceByEvidenceFolder
    - pipes:ListPipes
    - detective:ListMembers
    - dataexchange:CancelJob
    - devicefarm:ListSuites
    - rds:DescribeDBEngineVersions
    - appstream:UpdateAppBlockBuilder
    - connect:CreateVocabulary
    - app-integrations:DeleteEventIntegrationAssociation
    - neptune-db:DeleteMLEndpoint
    - sagemaker:DescribeHub
    - gamelift:ListGameServers
    - appstudio:StartRollbackEnablementJob
    - qapps:DisassociateLibraryItemReview
    - cloudformation:DescribeOrganizationsAccess
    - personalize:PutEvents
    - iotfleethub:ListTagsForResource
    - states:ListStateMachineVersions
    - sagemaker:CreateModelPackage
    - quicksight:ListVPCConnections
    - thinclient:UpdateSoftwareSet
    - devops-guru:UpdateEventSourcesConfig
    - redshift-serverless:CreateScheduledAction
    - sqlworkbench:CreateAccount
    - discovery:DescribeConfigurations
    - sso:UpdateInstance
    - es:DescribeReservedElasticsearchInstanceOfferings
    - sagemaker:DeleteModelExplainabilityJobDefinition
    - glue:UpdateMLTransform
    - config:DeleteServiceLinkedConfigurationRecorder
    - route53resolver:PutResolverQueryLogConfigPolicy
    - iot:ListThingTypes
    - medical-imaging:ListImageSetVersions
    - iot:ListCertificates
    - iot:ListJobs
    - lakeformation:DeleteLakeFormationIdentityCenterConfiguration
    - s3-outposts:ReplicateObject
    - bcm-pricing-calculator:UpdateBillScenarioUsageModification
    - mobiletargeting:CreateApp
    - rekognition:UntagResource
    - wisdom:StartImportJob
    - fsx:UpdateFileSystem
    - macie2:GetAutomatedDiscoveryConfiguration
    - sns:ListPhoneNumbersOptedOut
    - config:DeleteEvaluationResults
    - lightsail:AttachStaticIp
    - chime:GetVoiceProfile
    - workspaces:Stream
    - a4b:CreateGatewayGroup
    - forecast:ListPredictors
    - ecr-public:SetRepositoryPolicy
    - appstream:DisassociateApplicationFleet
    - glue:GetMLTaskRun
    - glue:GetJobs
    - iotsitewise:DescribeProject
    - organizations:DescribeEffectivePolicy
    - mediaconnect:ListGateways
    - apprunner:DeleteVpcIngressConnection
    - network-firewall:PutResourcePolicy
    - ce:UpdateCostCategoryDefinition
    - cloudfront:GetCachePolicy
    - sagemaker:CreateTrainingPlan
    - waf-regional:DeleteLoggingConfiguration
    - geo:UpdateMap
    - pi:GetDimensionKeyDetails
    - iottwinmaker:ListEntities
    - networkmanager:GetRouteAnalysis
    - access-analyzer:UpdateAnalyzer
    - codeguru-profiler:TagResource

  otherForbiddenServices:
    - panorama
    - glue
    - codestar
    - nimble
    - storagegateway
    - applicationinsights
    - glue
    - kendra-ranking
    - connect
    - resiliencehub
    - ds-data
    - deadline
    - panorama
    - rolesanywhere
    - notifications
    - guardduty
    - databrew
    - sdb
    - grafana
    - s3
    - logs
    - sms
    - medialive
    - dms
    - chime
    - omics
    - datazone
    - refactor-spaces
    - transcribe
    - auditmanager
    - rds
    - auditmanager
    - pipes
    - detective
    - dataexchange
    - devicefarm
    - rds
    - appstream
    - connect
    - app-integrations
    - neptune-db
    - sagemaker
    - gamelift
    - appstudio
    - qapps
    - cloudformation
    - personalize
    - iotfleethub
    - states
    - sagemaker
    - quicksight
    - thinclient
    - devops-guru
    - redshift-serverless
    - sqlworkbench
    - discovery
    - sso
    - es
    - sagemaker
    - glue
    - config
    - route53resolver
    - iot
    - medical-imaging
    - iot
    - iot
    - lakeformation
    - s3-outposts
    - bcm-pricing-calculator
    - mobiletargeting
    - rekognition
    - wisdom
    - fsx
    - macie2
    - sns
    - config
    - lightsail
    - chime
    - workspaces
    - a4b
    - forecast
    - ecr-public
    - appstream
    - glue
    - glue
    - iotsitewise
    - organizations
    - mediaconnect
    - apprunner
    - network-firewall
    - ce
    - cloudfront
    - sagemaker
    - waf-regional
    - geo
    - pi
    - iottwinmaker
    - networkmanager
    - access-analyzer
    - codeguru-profiler
#
#
# Notes

# {
#   "Version": "2012-10-17",
#   "Statement": [
#     {
#       "Sid": "FullEC2Access",
#       "Effect": "Allow",
#       "Action": "ec2:*",
#       "Resource": "*"
#     },
#     {
#       "Sid": "PreventLargerInstances",
#       "Effect": "Deny",
#       "Action": "ec2:RunInstances",
#       "Resource": "*",
#       "Condition": {
#         "StringNotLike": {
#           "ec2:InstanceType": [
#             "*.nano",
#             "*.micro",
#             "*.small"
#           ]
#         },
#         "StringEquals": {
#           "aws:Resource": "instance/*" # <- this key is not recognized by the AWS policy editor, but still works
#         }
#       }
#     }
#   ]
# }
