---
name: Full Access to AWS S3 Service
description: Create an **IAM identity policy** for a role that provides full access **only** to the AWS S3 service.
policyType: IDENTITY_POLICY
initialPolicy: {}
hints:
  - Have a look into the [JSON policy document structure](https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies-introduction).
solution: |
  Congratulations! You managed to pass the first challenge. Your created policy should look similar to the below:

  ```json
  {
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Action": "s3:*",
            "Resource": "*"
        }
    ]
  }
  ```
  This policy only allows access to AWS S3 service and nothing else.

testCases:
  - context:
      action: "${allowedActions}"
      resource: "arn:aws:s3:us-east-1:123456789012:amzn-s3-demo-bucket"
    allow: true

  - context:
      action: kms:Decrypt
      resource: arn:aws:kms:us-east-1:123456789012:key/e7137a59-6058-4f0b-87ab-3bccc80bf948
    allow: false

  - context:
      action: "${deniedActions}"
      resource: "arn:aws:${deniedService}:us-east-1:123456789012:*"
    allow: false

values:
  deniedActions:
    - kms:DeriveSharedSecret
    - kms:DescribeCustomKeyStores
    - eks:ListEksAnywhereSubscriptions
    - eks:ListFargateProfiles
    - eks:ListIdentityProviderConfigs
    - sqs:ListMessageMoveTasks
    - sqs:ListQueueTags
    - sqs:ListQueues
    - sqs:PurgeQueue
    - sqs:ReceiveMessage
    - sqs:RemovePermission
    - sns:ListTagsForResource
    - sns:ListTopics
    - sns:OptInPhoneNumber
    - sns:Publish
    - sns:PutDataProtectionPolicy
    - sns:RemovePermission
    - sns:SetEndpointAttributes
    - sns:SetPlatformApplicationAttributes
    - sns:SetSMSAttributes

  deniedService:
    - kms
    - kms
    - eks
    - eks
    - eks
    - sqs
    - sqs
    - sqs
    - sqs
    - sqs
    - sqs
    - sns
    - sns
    - sns
    - sns
    - sns
    - sns
    - sns
    - sns
    - sns

  allowedActions:
    - s3:AbortMultipartUpload
    - s3:AssociateAccessGrantsIdentityCenter
    - s3:BypassGovernanceRetention
    - s3:CreateAccessGrant
    - s3:CreateAccessGrantsInstance
    - s3:CreateAccessGrantsLocation
    - s3:CreateAccessPoint
    - s3:CreateAccessPointForObjectLambda
    - s3:CreateBucket
    - s3:CreateJob
    - s3:CreateMultiRegionAccessPoint
    - s3:CreateStorageLensGroup
    - s3:DeleteAccessGrant
    - s3:DeleteAccessGrantsInstance
    - s3:DeleteAccessGrantsInstanceResourcePolicy
    - s3:DeleteAccessGrantsLocation
    - s3:DeleteAccessPoint
    - s3:DeleteAccessPointForObjectLambda
    - s3:DeleteAccessPointPolicy
    - s3:DeleteAccessPointPolicyForObjectLambda
    - s3:DeleteBucket
    - s3:DeleteBucketPolicy
    - s3:DeleteBucketWebsite
    - s3:DeleteJobTagging
    - s3:DeleteMultiRegionAccessPoint
    - s3:DeleteObject
    - s3:DeleteObjectTagging
    - s3:DeleteObjectVersion
    - s3:DeleteObjectVersionTagging
    - s3:DeleteStorageLensConfiguration
    - s3:DeleteStorageLensConfigurationTagging
    - s3:DeleteStorageLensGroup
    - s3:DescribeJob
    - s3:DescribeMultiRegionAccessPointOperation
    - s3:DissociateAccessGrantsIdentityCenter
    - s3:GetAccelerateConfiguration
    - s3:GetAccessGrant
    - s3:GetAccessGrantsInstance
    - s3:GetAccessGrantsInstanceForPrefix
    - s3:GetAccessGrantsInstanceResourcePolicy
    - s3:GetAccessGrantsLocation
    - s3:GetAccessPoint
    - s3:GetAccessPointConfigurationForObjectLambda
    - s3:GetAccessPointForObjectLambda
    - s3:GetAccessPointPolicy
    - s3:GetAccessPointPolicyForObjectLambda
    - s3:GetAccessPointPolicyStatus
    - s3:GetAccessPointPolicyStatusForObjectLambda
    - s3:GetAccountPublicAccessBlock
    - s3:GetAnalyticsConfiguration
    - s3:GetBucketAcl
    - s3:GetBucketCORS
    - s3:GetBucketLocation
    - s3:GetBucketLogging
    - s3:GetBucketNotification
    - s3:GetBucketObjectLockConfiguration
    - s3:GetBucketOwnershipControls
    - s3:GetBucketPolicy
    - s3:GetBucketPolicyStatus
    - s3:GetBucketPublicAccessBlock
    - s3:GetBucketRequestPayment
    - s3:GetBucketTagging
    - s3:GetBucketVersioning
    - s3:GetBucketWebsite
    - s3:GetDataAccess
    - s3:GetEncryptionConfiguration
    - s3:GetIntelligentTieringConfiguration
    - s3:GetInventoryConfiguration
    - s3:GetJobTagging
    - s3:GetLifecycleConfiguration
    - s3:GetMetricsConfiguration
    - s3:GetMultiRegionAccessPoint
    - s3:GetMultiRegionAccessPointPolicy
    - s3:GetMultiRegionAccessPointPolicyStatus
    - s3:GetMultiRegionAccessPointRoutes
    - s3:GetObject
    - s3:GetObjectAcl
    - s3:GetObjectAttributes
    - s3:GetObjectLegalHold
    - s3:GetObjectRetention
    - s3:GetObjectTagging
    - s3:GetObjectTorrent
    - s3:GetObjectVersion
    - s3:GetObjectVersionAcl
    - s3:GetObjectVersionAttributes
    - s3:GetObjectVersionForReplication
    - s3:GetObjectVersionTagging
    - s3:GetObjectVersionTorrent
    - s3:GetReplicationConfiguration
    - s3:GetStorageLensConfiguration
    - s3:GetStorageLensConfigurationTagging
    - s3:GetStorageLensDashboard
    - s3:GetStorageLensGroup
    - s3:InitiateReplication
    - s3:ListAccessGrants
    - s3:ListAccessGrantsInstances
    - s3:ListAccessGrantsLocations
    - s3:ListAccessPoints
    - s3:ListAccessPointsForObjectLambda
    - s3:ListAllMyBuckets
    - s3:ListBucket
    - s3:ListBucketMultipartUploads
    - s3:ListBucketVersions
    - s3:ListCallerAccessGrants
    - s3:ListJobs
    - s3:ListMultiRegionAccessPoints
    - s3:ListMultipartUploadParts
    - s3:ListStorageLensConfigurations
    - s3:ListStorageLensGroups
    - s3:ListTagsForResource
    - s3:ObjectOwnerOverrideToBucketOwner
    - s3:PauseReplication
    - s3:PutAccelerateConfiguration
    - s3:PutAccessGrantsInstanceResourcePolicy
    - s3:PutAccessPointConfigurationForObjectLambda
    - s3:PutAccessPointPolicy
    - s3:PutAccessPointPolicyForObjectLambda
    - s3:PutAccessPointPublicAccessBlock
    - s3:PutAccountPublicAccessBlock
    - s3:PutAnalyticsConfiguration
    - s3:PutBucketAcl
    - s3:PutBucketCORS
    - s3:PutBucketLogging
    - s3:PutBucketNotification
    - s3:PutBucketObjectLockConfiguration
    - s3:PutBucketOwnershipControls
    - s3:PutBucketPolicy
    - s3:PutBucketPublicAccessBlock
    - s3:PutBucketRequestPayment
    - s3:PutBucketTagging
    - s3:PutBucketVersioning
    - s3:PutBucketWebsite
    - s3:PutEncryptionConfiguration
    - s3:PutIntelligentTieringConfiguration
    - s3:PutInventoryConfiguration
    - s3:PutJobTagging
    - s3:PutLifecycleConfiguration
    - s3:PutMetricsConfiguration
    - s3:PutMultiRegionAccessPointPolicy
    - s3:PutObject
    - s3:PutObjectAcl
    - s3:PutObjectLegalHold
    - s3:PutObjectRetention
    - s3:PutObjectTagging
    - s3:PutObjectVersionAcl
    - s3:PutObjectVersionTagging
    - s3:PutReplicationConfiguration
    - s3:PutStorageLensConfiguration
    - s3:PutStorageLensConfigurationTagging
    - s3:ReplicateDelete
    - s3:ReplicateObject
    - s3:ReplicateTags
    - s3:RestoreObject
    - s3:SubmitMultiRegionAccessPointRoutes
    - s3:TagResource
    - s3:UntagResource
    - s3:UpdateAccessGrantsLocation
    - s3:UpdateJobPriority
    - s3:UpdateJobStatus
    - s3:UpdateStorageLensGroup
