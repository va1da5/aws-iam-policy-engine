---
name: Full Access to AWS S3 Service But No Bucket Deletion
description: |
  You received a complaint from a colleague regarding the unauthorized deletion of their bucket.
  Upon reflection, it seems prudent to implement measures to prevent such deletions in the future.
  Consequently, you have decided to update the policy and introduce restrictions to safeguard against this issue.

  Please update the IAM identity policy to ensure that the deletion of any S3 buckets is not allowed.

policyType: IDENTITY_POLICY
initialPolicy:
  {
    "Version": "2012-10-17",
    "Statement": [{ "Effect": "Allow", "Action": "s3:*", "Resource": "*" }],
  }
hints:
  - "[`s3:DeleteBucket`](https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucket.html) actions must not be allowed"
  - "`Deny` effect might help you in this situation"
  - Can you define multiple statements in the same policy? ðŸ˜‰
solution: |
  Well done! You did it! Your policy should look very similar to the one below:

  ```json
  {
    "Version": "2012-10-17",
    "Statement": [
      {
        "Effect": "Allow",
        "Action": "s3:*",
        "Resource": "*"
      },
      {
        "Effect": "Deny",
        "Action": "s3:DeleteBucket",
        "Resource": "*"
      }
    ]
  }
  ```

  The buckets should be safe from deletion, right?! Let's see what exciting challenges await you next!

testCases:
  - context:
      action: "s3:DeleteBucket"
      resource: "arn:aws:s3:us-east-1:123456789012:amzn-s3-demo-bucket"
    allow: false

  - context:
      action: "${allowedActions}"
      resource: arn:aws:s3:us-east-1:123456789012:amzn-s3-demo-bucket
    allow: true

  - context:
      action: "${deniedActions}"
      resource: "arn:aws:${deniedService}:us-east-1:123456789012:*"
    allow: false

values:
  deniedActions:
    - neptune-graph:ListExportTasks
    - a4b:DeleteContact
    - iam:ResyncMFADevice
    - ssm:CreateOpsMetadata
    - ssm:UpdateManagedInstanceRole
    - kinesisanalytics:DescribeApplicationVersion
    - mediastore:DeleteObject
    - datazone:SearchTypes
    - macie2:CreateAllowList
    - kafka:DeleteReplicator
    - imagebuilder:ImportComponent
    - schemas:DeleteRegistry
    - dataexchange:ListJobs
    - globalaccelerator:UpdateListener
    - sqlworkbench:GetAutocompletionResource
    - pi:TagResource
    - dms:DescribeMetadataModelImports
    - verifiedpermissions:IsAuthorizedWithToken
    - athena:GetNamedQuery
    - budgets:DescribeBudgetActionsForAccount
    - medical-imaging:GetDICOMInstance
    - mgn:StartCutover
    - comprehend:DeleteEntityRecognizer
    - iot:GetCommandExecution
    - mgn:GetNetworkMigrationMapperSegmentConstruct
    - sns:RemovePermission
    - finspace:ResetUserPassword
    - aws-marketplace:UpdateTask
    - migrationhub-orchestrator:StartWorkflow
    - connect-campaigns:PutOutboundRequestBatch
    - servicecatalog:CreateProduct
    - geo:UpdateRouteCalculator
    - es:UpgradeDomain
    - appmesh:DescribeVirtualRouter
    - storagegateway:RetrieveTapeArchive
    - redshift:CreateSnapshotCopyGrant
    - config:GetComplianceDetailsByConfigRule
    - comprehend:StopTrainingEntityRecognizer
    - iot:Subscribe
    - ec2:DeregisterInstanceEventNotificationAttributes
    - controltower:GetEnabledControl
    - qbusiness:GetLicense
    - elasticmapreduce:PutWorkspaceAccess
    - kms:ListKeyPolicies
    - managedblockchain:GetNetwork
    - frauddetector:CreateModelVersion
    - inspector2:ListCoverageStatistics
    - ec2:ModifyVolumeAttribute
    - drs:StartSourceNetworkReplication
    - xray:GetTraceSegmentDestination
    - notifications:CreateEventRule
    - cloudwatch:EnableInsightRules
    - transfer:ImportHostKey
    - devops-guru:DescribeAnomaly
    - databrew:DescribeRecipe
    - entityresolution:DeleteMatchingWorkflow
    - comprehend:StopSentimentDetectionJob
    - deepcomposer:ListSampleModels
    - swf:UndeprecateDomain
    - guardduty:DisassociateMembers
    - appmesh:UpdateMesh
    - rekognition:CreateProject
    - datazone:GetSubscriptionTarget
    - transfer:DescribeUser
    - workspaces:CopyWorkspaceImage
    - controltower:ResetEnabledControl
    - tnb:ListTagsForResource
    - ec2:DescribeRegions
    - importexport:GetShippingLabel
    - config:GetStoredQuery
    - connect:UpdateUserHierarchyStructure
    - lakeformation:AddLFTagsToResource
    - acm-pca:DeleteCertificateAuthority
    - events:DescribeEventBus
    - ec2:DeleteVpnConnection
    - datazone:GetSubscriptionEligibility
    - airflow:TagResource
    - serverlessrepo:GetApplication
    - aoss:UpdateSecurityPolicy
    - elasticbeanstalk:DeleteEnvironmentConfiguration
    - iotevents:GetDetectorModelAnalysisResults
    - ec2:WithdrawByoipCidr
    - rds:DescribeBlueGreenDeployments
    - ses:GetImportJob
    - drs:GetAgentSnapshotCreditsForDrs
    - groundstation:RegisterAgent
    - sagemaker:StopNotebookInstance
    - ssm:DescribeAssociationExecutions
    - braket:SearchDevices
    - proton:UpdateServiceSyncConfig
    - codeguru-security:GetScan
    - awsconnector:RegisterConnector
    - ds:EnableRadius
    - ts:GetExecution
    - sagemaker:CreateCluster
    - appmesh:UpdateGatewayRoute
    - mediapackage:UpdateOriginEndpoint
    - codeartifact:DescribePackageVersion
    - config:DeleteAggregationAuthorization
    - arc-zonal-shift:ListAutoshifts

  deniedService:
    - neptune-graph
    - a4b
    - iam
    - ssm
    - ssm
    - kinesisanalytics
    - mediastore
    - datazone
    - macie2
    - kafka
    - imagebuilder
    - schemas
    - dataexchange
    - globalaccelerator
    - sqlworkbench
    - pi
    - dms
    - verifiedpermissions
    - athena
    - budgets
    - medical-imaging
    - mgn
    - comprehend
    - iot
    - mgn
    - sns
    - finspace
    - aws-marketplace
    - migrationhub-orchestrator
    - connect-campaigns
    - servicecatalog
    - geo
    - es
    - appmesh
    - storagegateway
    - redshift
    - config
    - comprehend
    - iot
    - ec2
    - controltower
    - qbusiness
    - elasticmapreduce
    - kms
    - managedblockchain
    - frauddetector
    - inspector2
    - ec2
    - drs
    - xray
    - notifications
    - cloudwatch
    - transfer
    - devops-guru
    - databrew
    - entityresolution
    - comprehend
    - deepcomposer
    - swf
    - guardduty
    - appmesh
    - rekognition
    - datazone
    - transfer
    - workspaces
    - controltower
    - tnb
    - ec2
    - importexport
    - config
    - connect
    - lakeformation
    - acm-pca
    - events
    - ec2
    - datazone
    - airflow
    - serverlessrepo
    - aoss
    - elasticbeanstalk
    - iotevents
    - ec2
    - rds
    - ses
    - drs
    - groundstation
    - sagemaker
    - ssm
    - braket
    - proton
    - codeguru-security
    - awsconnector
    - ds
    - ts
    - sagemaker
    - appmesh
    - mediapackage
    - codeartifact
    - config
    - arc-zonal-shift

  allowedActions:
    - s3:AbortMultipartUpload
    - s3:AssociateAccessGrantsIdentityCenter
    - s3:BypassGovernanceRetention
    - s3:CreateAccessGrant
    - s3:CreateAccessGrantsInstance
    - s3:CreateAccessGrantsLocation
    - s3:CreateAccessPoint
    - s3:CreateAccessPointForObjectLambda
    - s3:CreateBucket
    - s3:CreateJob
    - s3:CreateMultiRegionAccessPoint
    - s3:CreateStorageLensGroup
    - s3:DeleteAccessGrant
    - s3:DeleteAccessGrantsInstance
    - s3:DeleteAccessGrantsInstanceResourcePolicy
    - s3:DeleteAccessGrantsLocation
    - s3:DeleteAccessPoint
    - s3:DeleteAccessPointForObjectLambda
    - s3:DeleteAccessPointPolicy
    - s3:DeleteAccessPointPolicyForObjectLambda
    - s3:DeleteBucketPolicy
    - s3:DeleteBucketWebsite
    - s3:DeleteJobTagging
    - s3:DeleteMultiRegionAccessPoint
    - s3:DeleteObject
    - s3:DeleteObjectTagging
    - s3:DeleteObjectVersion
    - s3:DeleteObjectVersionTagging
    - s3:DeleteStorageLensConfiguration
    - s3:DeleteStorageLensConfigurationTagging
    - s3:DeleteStorageLensGroup
    - s3:DescribeJob
    - s3:DescribeMultiRegionAccessPointOperation
    - s3:DissociateAccessGrantsIdentityCenter
    - s3:GetAccelerateConfiguration
    - s3:GetAccessGrant
    - s3:GetAccessGrantsInstance
    - s3:GetAccessGrantsInstanceForPrefix
    - s3:GetAccessGrantsInstanceResourcePolicy
    - s3:GetAccessGrantsLocation
    - s3:GetAccessPoint
    - s3:GetAccessPointConfigurationForObjectLambda
    - s3:GetAccessPointForObjectLambda
    - s3:GetAccessPointPolicy
    - s3:GetAccessPointPolicyForObjectLambda
    - s3:GetAccessPointPolicyStatus
    - s3:GetAccessPointPolicyStatusForObjectLambda
    - s3:GetAccountPublicAccessBlock
    - s3:GetAnalyticsConfiguration
    - s3:GetBucketAcl
    - s3:GetBucketCORS
    - s3:GetBucketLocation
    - s3:GetBucketLogging
    - s3:GetBucketNotification
    - s3:GetBucketObjectLockConfiguration
    - s3:GetBucketOwnershipControls
    - s3:GetBucketPolicy
    - s3:GetBucketPolicyStatus
    - s3:GetBucketPublicAccessBlock
    - s3:GetBucketRequestPayment
    - s3:GetBucketTagging
    - s3:GetBucketVersioning
    - s3:GetBucketWebsite
    - s3:GetDataAccess
    - s3:GetEncryptionConfiguration
    - s3:GetIntelligentTieringConfiguration
    - s3:GetInventoryConfiguration
    - s3:GetJobTagging
    - s3:GetLifecycleConfiguration
    - s3:GetMetricsConfiguration
    - s3:GetMultiRegionAccessPoint
    - s3:GetMultiRegionAccessPointPolicy
    - s3:GetMultiRegionAccessPointPolicyStatus
    - s3:GetMultiRegionAccessPointRoutes
    - s3:GetObject
    - s3:GetObjectAcl
    - s3:GetObjectAttributes
    - s3:GetObjectLegalHold
    - s3:GetObjectRetention
    - s3:GetObjectTagging
    - s3:GetObjectTorrent
    - s3:GetObjectVersion
    - s3:GetObjectVersionAcl
    - s3:GetObjectVersionAttributes
    - s3:GetObjectVersionForReplication
    - s3:GetObjectVersionTagging
    - s3:GetObjectVersionTorrent
    - s3:GetReplicationConfiguration
    - s3:GetStorageLensConfiguration
    - s3:GetStorageLensConfigurationTagging
    - s3:GetStorageLensDashboard
    - s3:GetStorageLensGroup
    - s3:InitiateReplication
    - s3:ListAccessGrants
    - s3:ListAccessGrantsInstances
    - s3:ListAccessGrantsLocations
    - s3:ListAccessPoints
    - s3:ListAccessPointsForObjectLambda
    - s3:ListAllMyBuckets
    - s3:ListBucket
    - s3:ListBucketMultipartUploads
    - s3:ListBucketVersions
    - s3:ListCallerAccessGrants
    - s3:ListJobs
    - s3:ListMultiRegionAccessPoints
    - s3:ListMultipartUploadParts
    - s3:ListStorageLensConfigurations
    - s3:ListStorageLensGroups
    - s3:ListTagsForResource
    - s3:ObjectOwnerOverrideToBucketOwner
    - s3:PauseReplication
    - s3:PutAccelerateConfiguration
    - s3:PutAccessGrantsInstanceResourcePolicy
    - s3:PutAccessPointConfigurationForObjectLambda
    - s3:PutAccessPointPolicy
    - s3:PutAccessPointPolicyForObjectLambda
    - s3:PutAccessPointPublicAccessBlock
    - s3:PutAccountPublicAccessBlock
    - s3:PutAnalyticsConfiguration
    - s3:PutBucketAcl
    - s3:PutBucketCORS
    - s3:PutBucketLogging
    - s3:PutBucketNotification
    - s3:PutBucketObjectLockConfiguration
    - s3:PutBucketOwnershipControls
    - s3:PutBucketPolicy
    - s3:PutBucketPublicAccessBlock
    - s3:PutBucketRequestPayment
    - s3:PutBucketTagging
    - s3:PutBucketVersioning
    - s3:PutBucketWebsite
    - s3:PutEncryptionConfiguration
    - s3:PutIntelligentTieringConfiguration
    - s3:PutInventoryConfiguration
    - s3:PutJobTagging
    - s3:PutLifecycleConfiguration
    - s3:PutMetricsConfiguration
    - s3:PutMultiRegionAccessPointPolicy
    - s3:PutObject
    - s3:PutObjectAcl
    - s3:PutObjectLegalHold
    - s3:PutObjectRetention
    - s3:PutObjectTagging
    - s3:PutObjectVersionAcl
    - s3:PutObjectVersionTagging
    - s3:PutReplicationConfiguration
    - s3:PutStorageLensConfiguration
    - s3:PutStorageLensConfigurationTagging
    - s3:ReplicateDelete
    - s3:ReplicateObject
    - s3:ReplicateTags
    - s3:RestoreObject
    - s3:SubmitMultiRegionAccessPointRoutes
    - s3:TagResource
    - s3:UntagResource
    - s3:UpdateAccessGrantsLocation
    - s3:UpdateJobPriority
    - s3:UpdateJobStatus
    - s3:UpdateStorageLensGroup
