{
  "name": "Restricting EC2 Instance Launches to Small Sizes",
  "description": "Using an IAM policy, limit the types of EC2 instances that users can launch through the AWS console to only the small ones (nano, micro, and small) of any instance type allowed.\n",
  "policyType": "IDENTITY_POLICY",
  "initialPolicy": {
    "Version": "2012-10-17",
    "Statement": [
      {
        "Effect": "Allow",
        "Action": "ec2:*",
        "Resource": "*"
      }
    ]
  },
  "hints": [],
  "solution": "Congratulations! Your created policy should look similar to the below:\n\n```json\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"LimitInstanceTypes\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:RunInstances\",\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringLikeIfExists\": {\n          \"ec2:InstanceType\": [\n            \"*.nano\",\n            \"*.micro\",\n            \"*.small\"\n          ]\n        }\n      }\n    },\n    {\n      \"Sid\": \"AllowNeededActions\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:Describe*\",\n        \"ec2:CreateTags\",\n        \"ec2:CreateKeyPair\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}\n```\n\nor even simpler approach by just denying specific condition:\n\n```json\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"FullEC2Access\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:*\",\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"PreventLargerInstances\",\n      \"Effect\": \"Deny\",\n      \"Action\": \"ec2:RunInstances\",\n      \"Resource\": \"arn:aws:ec2:::instance/*\",\n      \"Condition\": {\n        \"StringNotLike\": {\n          \"ec2:InstanceType\": [\n            \"*.nano\",\n            \"*.micro\",\n            \"*.small\"\n          ]\n        }\n      }\n    }\n  ]\n}\n```\n",
  "testCases": [
    {
      "context": {
        "action": "ec2:RunInstances",
        "resource": "arn:aws:ec2:us-east-1:123456789012:instance/*",
        "ec2:InstanceMarketType": "on-demand",
        "aws:Resource": "instance/*",
        "aws:Account": "123456789012",
        "ec2:AvailabilityZone": "us-east-1a",
        "ec2:InstanceType": "${allowedInstanceTypes}",
        "ec2:RootDeviceType": "ebs",
        "aws:Region": "us-east-1",
        "aws:Service": "ec2",
        "ec2:InstanceID": "*",
        "aws:ARN": "arn:aws:ec2:us-east-1:123456789012:instance/*"
      },
      "allow": true
    },
    {
      "context": {
        "action": "ec2:RunInstances",
        "resource": "arn:aws:ec2:us-east-1:123456789012:instance/*",
        "ec2:InstanceMarketType": "on-demand",
        "aws:Resource": "instance/*",
        "aws:Account": "123456789012",
        "ec2:AvailabilityZone": "us-east-1a",
        "ec2:InstanceType": "${forbiddenInstanceTypes}",
        "ec2:RootDeviceType": "ebs",
        "aws:Region": "us-east-1",
        "aws:Service": "ec2",
        "ec2:InstanceID": "*",
        "aws:ARN": "arn:aws:ec2:us-east-1:123456789012:instance/*"
      },
      "allow": false
    },
    {
      "context": {
        "action": "ec2:RunInstances",
        "resource": "arn:aws:ec2:us-east-1:123456789012:network-interface/*",
        "ec2:Vpc": "arn:aws:ec2:us-east-1:123456789012:vpc/vpc-8cc269f1",
        "ec2:NetworkInterfaceID": "*",
        "aws:Resource": "network-interface/*",
        "aws:Account": "123456789012",
        "ec2:AvailabilityZone": "us-east-1a",
        "aws:Region": "us-east-1",
        "aws:Service": "ec2",
        "ec2:AssociatePublicIpAddress": "true",
        "ec2:Subnet": "arn:aws:ec2:us-east-1:123456789012:subnet/subnet-7bb32c1d",
        "aws:Type": "network-interface",
        "ec2:Region": "us-east-1",
        "aws:ARN": "arn:aws:ec2:us-east-1:123456789012:network-interface/*"
      },
      "allow": true
    },
    {
      "context": {
        "action": "ec2:RunInstances",
        "resource": "arn:aws:ec2:us-east-1:123456789012:security-group/sg-6616496b",
        "aws:Region": "us-east-1",
        "aws:Service": "ec2",
        "ec2:Vpc": "arn:aws:ec2:us-east-1:123456789012:vpc/vpc-8cc269f1",
        "aws:Resource": "security-group/sg-6616496b",
        "aws:Type": "security-group",
        "aws:Account": "123456789012",
        "ec2:Region": "us-east-1",
        "aws:ARN": "arn:aws:ec2:us-east-1:123456789012:security-group/sg-6616496b",
        "ec2:SecurityGroupID": "sg-6616496b"
      },
      "allow": true
    },
    {
      "context": {
        "action": "ec2:RunInstances",
        "resource": "arn:aws:ec2:us-east-1:123456789012:subnet/subnet-1642da49",
        "ec2:AvailabilityZoneId": "use1-az6",
        "ec2:Vpc": "arn:aws:ec2:us-east-1:123456789012:vpc/vpc-8cc269f1",
        "aws:Resource": "subnet/subnet-1642da49",
        "aws:Account": "123456789012",
        "ec2:AvailabilityZone": "us-east-1d",
        "ec2:SubnetID": "subnet-1642da49",
        "aws:Region": "us-east-1",
        "aws:Service": "ec2",
        "aws:Type": "subnet",
        "ec2:Region": "us-east-1",
        "aws:ARN": "arn:aws:ec2:us-east-1:123456789012:subnet/subnet-1642da49"
      },
      "allow": true
    },
    {
      "context": {
        "action": "ec2:RunInstances",
        "resource": "arn:aws:ec2:us-east-1:123456789012:volume/*",
        "aws:Account": "123456789012",
        "aws:Region": "us-east-1",
        "aws:Service": "ec2",
        "aws:Type": "volume",
        "ec2:Region": "us-east-1",
        "aws:Resource": "volume/*",
        "aws:ARN": "arn:aws:ec2:us-east-1:123456789012:volume/*",
        "ec2:VolumeThroughput": "125",
        "ec2:AvailabilityZone": "us-east-1a",
        "ec2:Encrypted": "false",
        "ec2:VolumeType": "gp3",
        "ec2:VolumeID": "*",
        "ec2:VolumeSize": "8"
      },
      "allow": true
    },
    {
      "context": {
        "action": "ec2:CreateKeyPair",
        "resource": "arn:aws:ec2:us-east-1:123456789012:key-pair/mgmt-ssh-key",
        "aws:Account": "123456789012",
        "aws:Region": "us-east-1",
        "aws:Service": "ec2",
        "aws:Type": "key-pair",
        "ec2:Region": "us-east-1",
        "aws:Resource": "key-pair/mgmt-ssh-key",
        "aws:ARN": "arn:aws:ec2:us-east-1:123456789012:key-pair/mgmt-ssh-key",
        "ec2:KeyPairType": "ed25519",
        "ec2:KeyPairName": "mgmt-ssh-key"
      },
      "allow": true
    },
    {
      "context": {
        "action": "ec2:CreateTags",
        "resource": "arn:aws:ec2:us-east-1:123456789012:key-pair/Management",
        "aws:Account": "123456789012",
        "aws:Region": "us-east-1",
        "aws:Service": "ec2",
        "aws:Type": "key-pair",
        "ec2:Region": "us-east-1",
        "aws:Resource": "key-pair/Management",
        "aws:ARN": "arn:aws:ec2:us-east-1:123456789012:key-pair/Management",
        "aws:ResourceTag/department": "development",
        "ec2:KeyPairName": "Management",
        "ec2:KeyPairType": "ed25519",
        "ec2:KeyPairID": "key-095cf2c239a7dd0d0",
        "ec2:ResourceTag/department": "development"
      },
      "allow": true
    },
    {
      "context": {
        "action": "${genericAllowedActions}",
        "resource": "arn:aws:ec2:us-east-1:123456789012:*",
        "aws:Account": "123456789012",
        "aws:Region": "us-east-1",
        "aws:Service": "ec2",
        "ec2:Region": "us-east-1"
      },
      "allow": true
    },
    {
      "context": {
        "action": "${otherForbiddenActions}",
        "resource": "arn:aws:${otherForbiddenServices}:us-east-1:123456789012:*"
      },
      "allow": false
    }
  ],
  "values": {
    "genericAllowedActions": [
      "ec2:DescribeInstances",
      "ec2:DescribeAvailabilityZones",
      "ec2:DescribeInstanceTypes",
      "ec2:DescribeInstanceTypeOfferings",
      "ec2:DescribeAccountAttributes",
      "ec2:DescribeSubnets",
      "ec2:DescribeSecurityGroups",
      "ec2:DescribeVpcs",
      "ec2:DescribeImages"
    ],
    "allowedInstanceTypes": [
      "t2.nano",
      "t2.micro",
      "t2.small",
      "t3.nano",
      "t3.micro",
      "t3.small",
      "t3a.nano",
      "t3a.micro",
      "t3a.small",
      "t4g.nano",
      "t4g.micro",
      "t4g.small"
    ],
    "forbiddenInstanceTypes": [
      "t2.medium",
      "t2.large",
      "t2.xlarge",
      "t2.2xlarge",
      "t3.medium",
      "t3.large",
      "t3.xlarge",
      "t3.2xlarge",
      "m4.large",
      "m4.xlarge",
      "m4.4xlarge",
      "m4.10xlarge",
      "m4.16xlarge",
      "m6g.large",
      "m6g.2xlarge",
      "m6g.metal",
      "m6gd.2xlarge",
      "m8g.medium",
      "m8g.xlarge",
      "m8g.4xlarge",
      "m8g.8xlarge",
      "m8g.16xlarge"
    ],
    "otherForbiddenActions": [
      "panorama:ListTagsForResource",
      "glue:CreateWorkflow",
      "codestar:UpdateProject",
      "nimble:DeleteStudioComponent",
      "storagegateway:SetSMBGuestPassword",
      "applicationinsights:DescribeLogPattern",
      "glue:StartMLEvaluationTaskRun",
      "kendra-ranking:UpdateRescoreExecutionPlan",
      "connect:CreateIntegrationAssociation",
      "resiliencehub:CreateAppVersionAppComponent",
      "ds-data:SearchGroups",
      "deadline:ListBudgets",
      "panorama:DescribePackage",
      "rolesanywhere:GetCrl",
      "notifications:DeleteEventRule",
      "guardduty:GetFindings",
      "databrew:StartJobRun",
      "sdb:PutAttributes",
      "grafana:ListWorkspaceServiceAccounts",
      "s3:DeleteAccessGrant",
      "logs:PutDataProtectionPolicy",
      "sms:DeleteServerCatalog",
      "medialive:DeleteEventBridgeRuleTemplateGroup",
      "dms:ListMetadataModelConversions",
      "chime:ListMediaPipelines",
      "omics:CreateWorkflow",
      "datazone:RejectSubscriptionRequest",
      "refactor-spaces:CreateEnvironment",
      "transcribe:DeleteVocabulary",
      "auditmanager:ListNotifications",
      "rds:ResetDBParameterGroup",
      "auditmanager:GetEvidenceByEvidenceFolder",
      "pipes:ListPipes",
      "detective:ListMembers",
      "dataexchange:CancelJob",
      "devicefarm:ListSuites",
      "rds:DescribeDBEngineVersions",
      "appstream:UpdateAppBlockBuilder",
      "connect:CreateVocabulary",
      "app-integrations:DeleteEventIntegrationAssociation",
      "neptune-db:DeleteMLEndpoint",
      "sagemaker:DescribeHub",
      "gamelift:ListGameServers",
      "appstudio:StartRollbackEnablementJob",
      "qapps:DisassociateLibraryItemReview",
      "cloudformation:DescribeOrganizationsAccess",
      "personalize:PutEvents",
      "iotfleethub:ListTagsForResource",
      "states:ListStateMachineVersions",
      "sagemaker:CreateModelPackage",
      "quicksight:ListVPCConnections",
      "thinclient:UpdateSoftwareSet",
      "devops-guru:UpdateEventSourcesConfig",
      "redshift-serverless:CreateScheduledAction",
      "sqlworkbench:CreateAccount",
      "discovery:DescribeConfigurations",
      "sso:UpdateInstance",
      "es:DescribeReservedElasticsearchInstanceOfferings",
      "sagemaker:DeleteModelExplainabilityJobDefinition",
      "glue:UpdateMLTransform",
      "config:DeleteServiceLinkedConfigurationRecorder",
      "route53resolver:PutResolverQueryLogConfigPolicy",
      "iot:ListThingTypes",
      "medical-imaging:ListImageSetVersions",
      "iot:ListCertificates",
      "iot:ListJobs",
      "lakeformation:DeleteLakeFormationIdentityCenterConfiguration",
      "s3-outposts:ReplicateObject",
      "bcm-pricing-calculator:UpdateBillScenarioUsageModification",
      "mobiletargeting:CreateApp",
      "rekognition:UntagResource",
      "wisdom:StartImportJob",
      "fsx:UpdateFileSystem",
      "macie2:GetAutomatedDiscoveryConfiguration",
      "sns:ListPhoneNumbersOptedOut",
      "config:DeleteEvaluationResults",
      "lightsail:AttachStaticIp",
      "chime:GetVoiceProfile",
      "workspaces:Stream",
      "a4b:CreateGatewayGroup",
      "forecast:ListPredictors",
      "ecr-public:SetRepositoryPolicy",
      "appstream:DisassociateApplicationFleet",
      "glue:GetMLTaskRun",
      "glue:GetJobs",
      "iotsitewise:DescribeProject",
      "organizations:DescribeEffectivePolicy",
      "mediaconnect:ListGateways",
      "apprunner:DeleteVpcIngressConnection",
      "network-firewall:PutResourcePolicy",
      "ce:UpdateCostCategoryDefinition",
      "cloudfront:GetCachePolicy",
      "sagemaker:CreateTrainingPlan",
      "waf-regional:DeleteLoggingConfiguration",
      "geo:UpdateMap",
      "pi:GetDimensionKeyDetails",
      "iottwinmaker:ListEntities",
      "networkmanager:GetRouteAnalysis",
      "access-analyzer:UpdateAnalyzer",
      "codeguru-profiler:TagResource"
    ],
    "otherForbiddenServices": [
      "panorama",
      "glue",
      "codestar",
      "nimble",
      "storagegateway",
      "applicationinsights",
      "glue",
      "kendra-ranking",
      "connect",
      "resiliencehub",
      "ds-data",
      "deadline",
      "panorama",
      "rolesanywhere",
      "notifications",
      "guardduty",
      "databrew",
      "sdb",
      "grafana",
      "s3",
      "logs",
      "sms",
      "medialive",
      "dms",
      "chime",
      "omics",
      "datazone",
      "refactor-spaces",
      "transcribe",
      "auditmanager",
      "rds",
      "auditmanager",
      "pipes",
      "detective",
      "dataexchange",
      "devicefarm",
      "rds",
      "appstream",
      "connect",
      "app-integrations",
      "neptune-db",
      "sagemaker",
      "gamelift",
      "appstudio",
      "qapps",
      "cloudformation",
      "personalize",
      "iotfleethub",
      "states",
      "sagemaker",
      "quicksight",
      "thinclient",
      "devops-guru",
      "redshift-serverless",
      "sqlworkbench",
      "discovery",
      "sso",
      "es",
      "sagemaker",
      "glue",
      "config",
      "route53resolver",
      "iot",
      "medical-imaging",
      "iot",
      "iot",
      "lakeformation",
      "s3-outposts",
      "bcm-pricing-calculator",
      "mobiletargeting",
      "rekognition",
      "wisdom",
      "fsx",
      "macie2",
      "sns",
      "config",
      "lightsail",
      "chime",
      "workspaces",
      "a4b",
      "forecast",
      "ecr-public",
      "appstream",
      "glue",
      "glue",
      "iotsitewise",
      "organizations",
      "mediaconnect",
      "apprunner",
      "network-firewall",
      "ce",
      "cloudfront",
      "sagemaker",
      "waf-regional",
      "geo",
      "pi",
      "iottwinmaker",
      "networkmanager",
      "access-analyzer",
      "codeguru-profiler"
    ]
  }
}
